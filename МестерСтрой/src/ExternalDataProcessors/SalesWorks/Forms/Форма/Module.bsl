
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройки = ОбъектОбработки().ПолучитьНастройки();
	
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитФормыИзНатроек(Настройки, "ГруппаПользователей");
	ЗаполнитьРеквизитФормыИзНатроек(Настройки, "КаталогВыгрузки");
	ЗаполнитьРеквизитФормыИзНатроек(Настройки, "ПроизводительБренд");
	
КонецПроцедуры

#КонецОбласти

//#Область ОбработчикиСобытийЭлементовШапкиФормы 
//	
//#КонецОбласти

#Область ОбработчикиКомандФормы  

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НачальноеЗаполнение(Команда)
	НачальноеЗаполнениеНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
	ВыгрузитьДанныеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитФормыИзНатроек(Настройки, ИмяРеквизита)

	Если Настройки.Свойство(ИмяРеквизита) Тогда
		ЭтотОбъект[ИмяРеквизита] = Настройки[ИмяРеквизита];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НачальноеЗаполнениеНаСервере() 
	
	МассивСозданных = Новый Массив;
		
	// Контрагенты
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "Контрагенты_SalesWorks_CODE";
	ЭлементПлана.Имя = "Контрагенты_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_Контрагенты");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана);
	
	// Партнеры (Клиенты)
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "Партнеры_SalesWorks_CODE";
	ЭлементПлана.Имя = "Партнеры_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_Партнеры_Клиенты");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана);;
	
	// Номенклатура
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "Номенклатура_SalesWorks_CODE";
	ЭлементПлана.Имя = "Номенклатура_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_Номенклатура_Общие");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана);
	
	// Склад
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "Склады_SalesWorks_CODE";
	ЭлементПлана.Имя = "Склады_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_Склады");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана);
	
	// Виды цен
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "ВидыЦен_SalesWorks_CODE";
	ЭлементПлана.Имя = "ВидыЦен_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_ВидыЦен");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана);  
	
	// Пользователи
	ЭлементПлана = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ЭлементПлана.ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(10);
	ЭлементПлана.Наименование = "SalesWorks_CODE";
	ЭлементПлана.Виден = Истина;
	ЭлементПлана.Доступен = Истина;
	ЭлементПлана.Заголовок = "SalesWorks_CODE";
	ЭлементПлана.ИдентификаторДляФормул = "Пользователи_SalesWorks_CODE";
	ЭлементПлана.Имя = "Пользователи_SalesWorks_CODE";
	ЭлементПлана.НаборСвойств = НаборСвойств("Справочник_Пользователи");
	ЭлементПлана.ЭтоДополнительноеСведение = Истина;
	ЭлементПлана.ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеСведения;
	МассивСозданных.Добавить(ЭлементПлана); 
	
	НачатьТранзакцию();
	Для Каждого Элемент ИЗ МассивСозданных Цикл
		ЭлементСсылка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", Элемент.Имя);
		Если ЭлементСсылка.Пустая() Тогда
			 Элемент.Записать();
			 НаборОбъект = Элемент.НаборСвойств.ПолучитьОбъект();
			 СтрокаНабора = НаборОбъект.ДополнительныеСведения.Добавить();
			 СтрокаНабора.Свойство = Элемент.Ссылка;
			 НаборОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
	КакиеСправочникиЗаполнять = Новый Массив;
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.Контрагенты);
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.Партнеры);
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.Номенклатура);
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.Склады);
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.ВидыЦен);
	КакиеСправочникиЗаполнять.Добавить(Метаданные.Справочники.Пользователи);
	
	Для Каждого ТекущийСправочник Из КакиеСправочникиЗаполнять Цикл
		
		Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", ТекущийСправочник.Имя + "_SalesWorks_CODE");
				
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ДополнительныеСведения.Значение) КАК Значение
		|ПОМЕСТИТЬ МаксимальноеЗначение
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Свойство = &Свойство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ДополнительныеСведения.Значение, 0) КАК Значение,
		|	&Свойство КАК Свойство,
		|	ЕСТЬNULL(МаксимальноеЗначение.Значение, 0) КАК МаксимальноеЗначение
		|ИЗ
		|	Справочник." + ТекущийСправочник.Имя + " КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|		ПО Контрагенты.Ссылка = ДополнительныеСведения.Объект
		|			И (ДополнительныеСведения.Свойство = &Свойство)
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальноеЗначение КАК МаксимальноеЗначение
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ЕСТЬNULL(ДополнительныеСведения.Значение, 0) = 0
		|	И НЕ Контрагенты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Свойство", Свойство);
		
		//@skip-check query-in-loop
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ПерваяСтрока = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ПерваяСтрока Тогда
				СледующийКод = ВыборкаДетальныеЗаписи.МаксимальноеЗначение + 1;
				ПерваяСтрока = Ложь;
			КонецЕсли;
			
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = ВыборкаДетальныеЗаписи.Ссылка;
			МенеджерЗаписи.Свойство = ВыборкаДетальныеЗаписи.Свойство;
			МенеджерЗаписи.Значение = СледующийКод;
			
			МенеджерЗаписи.Записать();
			
			СледующийКод = СледующийКод + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НаборСвойств(ИмяПредопределенногоНабора)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НаборыДополнительныхРеквизитовИСведений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК НаборыДополнительныхРеквизитовИСведений
		|ГДЕ
		|	НаборыДополнительныхРеквизитовИСведений.Используется
		|	И НаборыДополнительныхРеквизитовИСведений.ИмяПредопределенногоНабора = &ИмяПредопределенногоНабора";
	
	Запрос.УстановитьПараметр("ИмяПредопределенногоНабора", ИмяПредопределенногоНабора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура СохранитьНастройкиНаСервере()

	КлючОбъекта = "SalesWorks";
	КлючНастроек = "НастройкиSalesWorks";
	ИмяПользователя = "Администратор";
	
	Настройки = Новый Структура;
	Настройки.Вставить("КаталогВыгрузки", КаталогВыгрузки); 
	Настройки.Вставить("ГруппаПользователей", ГруппаПользователей);
	Настройки.Вставить("ПроизводительБренд", ПроизводительБренд);
	
	ХранилищеОбщихНастроек.Сохранить(КлючОбъекта,  КлючНастроек, Настройки, , ИмяПользователя);
	
КонецПроцедуры 

&НаСервере
Функция ОбъектОбработки()

	Возврат РеквизитФормыВЗначение("Объект");
	
КонецФункции 

&НаСервере
Процедура ВыгрузитьДанныеНаСервере()

	ОбъектОбработки().ВыгрузитьВсеДанные();
	
КонецПроцедуры

#КонецОбласти
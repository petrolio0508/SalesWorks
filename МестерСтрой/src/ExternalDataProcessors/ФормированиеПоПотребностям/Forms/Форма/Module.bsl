
&НаСервере
Процедура ВыполнитьДействиеНаСервере()
	
	КомпоновщикНастроекДляОтборов = Новый КомпоновщикНастроекКомпоновкиДанных();
	ДоступныеТипыОбеспечения = Новый Массив();
	ДоступныеТипыОбеспечения.Добавить(Перечисления.ТипыОбеспечения.Покупка);
	ИнициализироватьКомпоновщикНастроекДляОтборов(КомпоновщикНастроекДляОтборов, ДоступныеТипыОбеспечения);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Настройки", КомпоновщикНастроекДляОтборов.ПолучитьНастройки());
	ПараметрыПроцедуры.Вставить("ТоварыПоддерживаемогоЗапаса", Истина);
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено);
	Обработки.ОбеспечениеПотребностей.ТаблицаСпособовОбеспечения(ПараметрыПроцедуры, АдресРезультата);
	ТаблицаСпособовОбеспечения = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	/////////////////////////////////////////////////////////
	ТаблицаСпособыОбеспечения = ТаблицаСпособовОбеспечения.Скопировать(Новый Структура("Отметка", Истина),
		"СпособОбеспечения, ФормироватьПлановыеЗаказы, ДатаПоставки");
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ТипОтбора", "ОтборыКомпоновки");
	ПараметрыПроцедуры.Вставить("Отбор", КомпоновщикНастроекДляОтборов.ПользовательскиеНастройки);
	ПараметрыПроцедуры.Вставить("ТаблицаСпособовОбеспечения", ТаблицаСпособыОбеспечения);
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено);
	Обработки.ОбеспечениеПотребностей.ТаблицаЗапасы(ПараметрыПроцедуры, АдресРезультата);
	ТаблицаЗапасы = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	///ТаблицаСпособыОбеспечения = Новый ТаблицаЗначений;
	//ТаблицаСпособыОбеспечения.Колонки.Добавить("СпособОбеспечения", Новый ОписаниеТипов(Тип("СправочникСсылка.СпособыОбеспеченияПотребностей")));
	//ТаблицаСпособыОбеспечения.Колонки.Добавить("СпособОбеспечения", Новый ОписаниеТипов(Тип("СправочникСсылка.СпособыОбеспеченияПотребностей")));

	//ПараметрыПроцедуры = Новый Структура;
	//ПараметрыПроцедуры.Вставить("ТипОтбора", "ОтборыКомпоновки");
	//ПараметрыПроцедуры.Вставить("Отбор", КомпоновщикНастроекДляОтборов.ПользовательскиеНастройки);
	//ПараметрыПроцедуры.Вставить("Отбор", Новый ОтборКомпоновкиДанных());
	//ПараметрыПроцедуры.Вставить("ТаблицаСпособовОбеспечения", ТаблицаСпособыОбеспечения);

	//АдресРезультата = Новый УникальныйИдентификатор();
	//Обработки.ОбеспечениеПотребностей.ТаблицаЗапасы(Параметры, АдресРезультата);

КонецПроцедуры


&НаСервере
Процедура ИнициализироватьКомпоновщикНастроекДляОтборов(КомпоновщикНастроекДляОтборов, ДоступныеТипыОбеспечения)
	
	СхемаКомпоновкиДанных = Обработки.ОбеспечениеПотребностей.ПолучитьМакет("МакетКомпоновкиДляСерверныхОтборов");
	УстановитьДоступныеТипыИсточникиОбеспеченияВСКД(СхемаКомпоновкиДанных, ДоступныеТипыОбеспечения);
	//УстановитьПараметрыВыбораКладовыхВСКД(СхемаКомпоновкиДанных);

	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных); 
	КомпоновщикНастроекДляОтборов.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроекДляОтборов.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	//КомпоновщикНастроекДляОтборов.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступныеТипыИсточникиОбеспеченияВСКД(СхемаКомпоновкиДанных, ДоступныеТипыОбеспечения)
	
	ПолеТипОбеспечения = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти(Новый ПолеКомпоновкиДанных("ТипОбеспечения"));
	
	Список = Новый СписокЗначений();
	Список.ЗагрузитьЗначения(ДоступныеТипыОбеспечения);
	ПолеТипОбеспечения.УстановитьДоступныеЗначения(Список);
	
	ПолеИсточникОбеспечения = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти(Новый ПолеКомпоновкиДанных("ИсточникОбеспечения"));
	
	ПолеИсточникОбеспечения.ТипЗначения = ДоступныеТипыИсточникаОбеспечения(ДоступныеТипыОбеспечения);
	
КонецПроцедуры

&НаСервере
Функция ДоступныеТипыИсточникаОбеспечения(ДоступныеТипыОбеспечения)
	
	Если Не ЗначениеЗаполнено(ДоступныеТипыОбеспечения) Тогда
		Возврат Метаданные.Справочники.СпособыОбеспеченияПотребностей.Реквизиты.ИсточникОбеспеченияПотребностей.Тип;
	КонецЕсли;
	
	Типы = Новый Массив;
	Для каждого ТипОбеспечения Из ДоступныеТипыОбеспечения Цикл
		Если ТипОбеспечения = Перечисления.ТипыОбеспечения.Покупка
			Или ТипОбеспечения = Перечисления.ТипыОбеспечения.ПроизводствоНаСтороне Тогда
			Типы.Добавить(Тип("СправочникСсылка.Партнеры"));
		ИначеЕсли ТипОбеспечения = Перечисления.ТипыОбеспечения.Перемещение Тогда
			Типы.Добавить(Тип("СправочникСсылка.Склады"));
		ИначеЕсли ТипОбеспечения = Перечисления.ТипыОбеспечения.Производство Тогда
			Типы.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый ОписаниеТипов(Типы);
	
КонецФункции



&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	ВыполнитьДействиеНаСервере();
КонецПроцедуры
